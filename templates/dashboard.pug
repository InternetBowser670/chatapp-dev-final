doctype html
html
  head
    title Convoes
    link(rel='icon', href='/favicon.ico', type='image/x-icon')
    link(rel="stylesheet", href="/styles/main")
    script(src="/scripts/scroll") 
  body
    script.
      async function checkPing() {
        const start = performance.now();  // Record start time
        await fetch('/ping');  // Send a request to the server (can be a simple endpoint)
        const end = performance.now();    // Record end time
        const ping = end - start;  // Calculate the difference
        console.log(`Ping: ${ping} ms`);
        return ping
      }


      function sleep(ms) {
          return new Promise(resolve => setTimeout(resolve, ms));
        }
      function myFunction(chat) {
        alert(`Deleted chat \"${chat}\"`)
        fetch(`/deletechat/${chat}`, { 
            method: "POST"
        })
        
        
        sleep(checkPing() + 2000)

        window.location.reload()
      }


    div(id="dashHeader" class="styleDiv threeQtrCentered")
      div(class="inline spaced spacedApartInner")
        h1 Convoes
        a(href="/settings")
          img(src="/assets/images/settings.png" width=20 size=20)

      hr
      h2 Welcome, #{name} | 
        a(href="/logout") Logout  
      div(class="halfCentered styleDiv centerContent")
        h2 Chat List
        div(class="styleDiv inline spacedApart chatLink scrollable" id="chatList")
          ul(class="draggable-list")
            each chat in chats
              - var chatName = chat
              - chat = chat.toString()

              li(class="chatLink" draggable="true")
                div(class="spacedApart" id="chatList")
                  a(href=`/chats/${chat}` class="chatLink")
                    p(class="chatLink") #{chat}   
                  button(onclick=`myFunction("${chat}")` style="background: none; justfy-self: flex-end; border: none; color: inherit; cursor: pointer;" class="trashcan")
                    img(src="/assets/trashcan.png", class="trashcan")

          
      
        form(action="/createchats" method="post")
          div
            label(for="chatname") Name:
            br
            input(type="text" name="chatname" autocomplete="off" readonly 
  onfocus="this.removeAttribute('readonly');" required)
          div
            label(for="password") Password:
            br
            input(type="password" autocomplete="off" readonly 
  onfocus="this.removeAttribute('readonly');" name="password" required)
          div
            button(type="submit") Submit
        p(id="responsedata")